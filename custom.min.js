const genobank=new GenoBankLogin;genobank.init();let prevButtons={};function startLoadingButton(t){$("#"+t).attr("disabled",!0),prevButtons[t]={prevContent:$("#"+t).html()},$("#"+t).html('\n        <span class="spinner-grow spinner-grow-sm" aria-hidden="true"></span>\n        <span role="status" class="h6">Loading...</span>\n    ')}function stopLoadingButton(t){$("#"+t).attr("disabled",!1),$("#"+t).html(prevButtons[t]?.prevContent)}function showErrorToast(t){$(".toast .toast-body").text(t);let e=$(".toast");new bootstrap.Toast(e).show()}function magicConstructor(){return new Magic(window.MAGIC_API_KEY,{extensions:[new MagicOAuthExtension],network:{rpcUrl:window.RPC_NETWORK,chainId:window.CHAIN_ID}})}async function loginUsingMetamask(){startLoadingButton("id-metamask-button");try{const t=$("#metamaskLoginSpiner");if(void 0===window.ethereum)return showErrorToast("MetaMask is not detected. Please install MetaMask and try again."),void t.hide();let e=new ethers.providers.Web3Provider(window.ethereum);const n=await metamaskLogin(e,window.MESSAGE_TO_SIGN);await finishingLoginProcess(n)}catch(t){stopLoadingButton("id-metamask-button"),showErrorToast("Error: "+t.message)}}async function metamaskLogin(t,e){await window.ethereum.request({method:"eth_requestAccounts"});let n=await t.getSigner().signMessage(e),o=await t.getSigner().getAddress(),i=!1;try{i=!!await genobank.getValidatePermittee(o)}catch(t){console.warn("Could not validate permittee status:",t)}return{userSignature:n,user_signature:n,userWallet:o,user_wallet:o,isPermittee:i,loginMethod:"metamask",login_method:"metamask"}}async function loginUsingGoogle(){startLoadingButton("id-google-button");try{let t=magicConstructor();await t.oauth.loginWithRedirect({provider:"google",redirectURI:window.location.protocol+"//"+getCurrentDomainWithPort()+"/oauth-callback.html"})}catch(t){stopLoadingButton("id-google-button"),showErrorToast("Error: "+t.message)}}async function handleOAuthResult(){try{let t=magicConstructor();$("#id-oauth-loading-text").html("Getting user data...");const e=await t.oauth.getRedirectResult();let n=!1;try{n=await genobank.getValidatePermittee(e?.magic?.userMetadata?.publicAddress)}catch(t){console.warn("Could not validate permittee status:",t)}$("#id-oauth-loading-text").html("Generating signature...");const o={userSignature:await signAndVerify(MESSAGE_TO_SIGN,e?.magic?.userMetadata?.publicAddress),user_signature:await signAndVerify(MESSAGE_TO_SIGN,e?.magic?.userMetadata?.publicAddress),userWallet:e?.magic?.userMetadata?.publicAddress,user_wallet:e?.magic?.userMetadata?.publicAddress,isPermittee:n,loginMethod:"magic",login_method:"magic",magicToken:e?.magic?.idToken,magic_token:e?.magic?.idToken,email:e?.oauth?.userInfo?.email,name:e?.oauth?.userInfo?.name,picture:e?.oauth?.userInfo?.picture};$("#id-oauth-loading-text").html("Finishing..."),await finishingLoginProcess(o)}catch(t){console.error("OAuth error:",t),showErrorToast("Authentication failed. Please try again.")}}async function loginUsingEmailHandler(){startLoadingButton("id-email-button");try{const t=$("#emailInput").val();if(!t)return void showErrorToast("Please enter your email address");await loginUsingEmail(t)}catch(t){console.error("Error in loginUsingEmailHandler:",t),showErrorToast("Error: "+t.message)}finally{stopLoadingButton("id-email-button")}}async function loginUsingEmail(t){try{const e=magicConstructor(),n=await e.auth.loginWithMagicLink({email:t}),o=await e.user.getInfo();let i=!1;try{i=await genobank.getValidatePermittee(o?.publicAddress)}catch(t){console.warn("Could not validate permittee status:",t)}const a={userSignature:await signAndVerify(window.MESSAGE_TO_SIGN,o?.publicAddress),user_signature:await signAndVerify(window.MESSAGE_TO_SIGN,o?.publicAddress),userWallet:o?.publicAddress,user_wallet:o?.publicAddress,isPermittee:i,loginMethod:"magic_email",login_method:"magic_email",magicToken:n,magic_token:n,email:o?.email};await finishingLoginProcess(a)}catch(t){throw console.error("Email login error:",t),t}}async function signAndVerify(t,e){try{if(!e)throw new Error("No account found.");const n=magicConstructor(),o=new Web3(n.rpcProvider);if(!await n.user.isLoggedIn())throw new Error("User is not logged in with Magic.");return await o.eth.personal.sign(t,e,"")}catch(t){throw console.error("Error signing the message:",t),t}}async function finishingLoginProcess(t){if(window.smartFinishingLoginProcess)return await window.smartFinishingLoginProcess(t);const e=getConfig();if(console.log("Auth config:",e),e.isPopup)sendToParent(e?.source,t);else{const n=await generateAuthJWT(t),o=new URLSearchParams(window.location.search),i=o.get("returnUrl")||o.get("return_url")||e?.source;if(i){const t=i.includes("?")?"&":"?";window.location.href=i+t+"data="+btoa(n?.jwt||"")}else t.isPermittee?window.location.href="https://genobank.io/consent/lab_biofile/?data="+btoa(n?.jwt||""):window.location.href="https://genobank.io/consent/biofile/?data="+btoa(n?.jwt||"")}}function sendToParent(t,e){const n={genobankLogin:e};window.opener.postMessage(n,t),window.close()}async function generateAuthJWT(t){try{const e=new URL("https://genobank.app/generate_jwt"),n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await n.json()}catch(t){return console.error("Error generating JWT:",t),null}}function getCurrentDomainWithPort(){const t=window.location;let e=t.hostname;return t.port&&"80"!==t.port&&"443"!==t.port&&(e+=":"+t.port),e}function saveConfig(t){sessionStorage.setItem("data",t)}function getConfig(t=!1){const e=sessionStorage.getItem("authConfig");if(e)try{const n=JSON.parse(e);return!1!==t?n[t]:n}catch(t){console.warn("Could not parse authConfig:",t)}const n=sessionStorage.getItem("data");if(!n)return{};try{const e=atob(n).replace(/'/g,'"'),o=JSON.parse(e);return!1!==t?o[t]:o}catch(t){return console.warn("Could not parse data:",t),{}}}!function(){try{const t=new URLSearchParams(window.location.search),e=t.get("data"),n=t.get("returnUrl")||t.get("return_url")||t.get("redirect");if(n){const t={source:n,isPopup:!1};sessionStorage.setItem("authConfig",JSON.stringify(t)),saveConfig(btoa(JSON.stringify(t).replace(/"/g,"'")))}else e&&saveConfig(e)}catch(t){console.error("Error in initialization:",t)}}(),document.addEventListener("DOMContentLoaded",function(){window.checkExistingAuth&&window.checkExistingAuth()||"/oauth-callback.html"===window.location.pathname&&handleOAuthResult()}),window.finishingLoginProcess=finishingLoginProcess,window.loginUsingMetamask=loginUsingMetamask,window.loginUsingGoogle=loginUsingGoogle,window.loginUsingEmailHandler=loginUsingEmailHandler;